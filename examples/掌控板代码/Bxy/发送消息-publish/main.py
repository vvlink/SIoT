# 功能：发布光线数据# 实验：这个实验需要2个掌控板，一个发布光线数据一个订阅光线数据#           发布的掌控板，给光线传感器不同的光照，光线强度将被发布到#           EasyIot的对应主题，供其他设备使用#注意事项：这个实验需要2个掌控板，这是发布端代码#     1.本实验可用EasyIot物联网，用户需要注册EasyIot账号，添加#     2.本实验可用Siot物联网，用户搭建Siot服务器：https://github.com/vvlink/SIoT/blob/master/source/setup/02_run.rst#     产品和设备，并将产品设备信息更新到这个示例中      from mpython import lightfrom Iot import Iotfrom umqtt.simple import MQTTClientfrom machine import Timer import machineimport timeimport jsonimport networkWIFI_SSID = 'yourSSID'#替换成你的WIFI热点名称WIFI_PASSWORD = 'yourPASSWD'#替换成你的WIFI热点密码IOT_SERVER = "server address" #EASYIOT的服务器为iot.dfrobot.com.cn；Siot地址为用户搭建的服务器的ip地址，例如：192.168.0.100IOT_PORT = 1883IOT_ClientID = "your ClientID"#替换成你的ClientID，可为空IOT_UserName = "your UserName"#替换成你的UserNameIOT_PassWord = "your PassWord"#替换成你的PassWordIOT_pubTopic = 'your PubTopic' #如果是siot，自定义的topic中需要添加"/"，例如:"abc/abc"myIot = Iot(IOT_SERVER, IOT_UserName, IOT_ClientID, IOT_PassWord)client = MQTTClient(myIot.client_id, myIot.mqttserver, port = IOT_PORT, user = myIot.username, password = myIot.password)tim1 = Timer(1)def connectWIFI():  station = network.WLAN(network.STA_IF)  station.active(True)  station.connect(WIFI_SSID,WIFI_PASSWORD)  while station.isconnected() == False:    pass  print('Connection successful')  print(station.ifconfig())  def restart():  time.sleep(10)  machine.reset()  def check(_):  try:    msg = {}    client.check_msg()    msg["light"] = light.read()    print(json.dumps(msg))    client.publish(IOT_pubTopic,json.dumps(msg))    lastTime = time.time()  except OSError as e:    tim1.deinit()    restart()  connectWIFI()client.connect()tim1.init(period=5000, mode=Timer.PERIODIC,callback=check)while True:  pass